@page "/recipes"

@using RecipeLewis.Data
@inherits RecipesBase


@using IModel = Models.RecipeModel

<div id="recipePage">
  <div class="row justify-content-center">
    <div class="col-auto">
      <h1>Recipes</h1>
    </div>
  </div>
  @if (ShowEditData || ShowViewData)
  {
    <EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
      <div class="row">
        <div class="col-md-12">
          <RadzenFieldset Text="Recipe Info">
            <div class="row">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Title" />
              </div>
              <div class="col-md-4">
                <RadzenTextBox Name="Title" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Title" />
              </div>
              <div class="col-md-1 col-offset-2 d-flex">
                <RadzenLabel Text="Author" />
              </div>
              <div class="col-md-4">
                <RadzenTextBox Name="Author" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Author" />
              </div>
            </div>
            <div class="row mt-2">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Description" />
              </div>
              <div class="col-md-9">
                <RadzenTextArea Name="Description" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Description" />
              </div>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <RadzenFieldset Text="Details">
            <div class="row">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Serving Size" />
              </div>
              <div class="col-md-3">
                <RadzenTextBox Name="ServingSize" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.ServingSize" />
              </div>
              <div class="col-md-2 col-offset-2 d-flex">
                <RadzenLabel Text="Number of Servings" />
              </div>
              <div class="col-md-3">
                <RadzenTextBox Name="ServingsAmount" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.ServingSize" />
              </div>
            </div>
            <div class="row align-items-center mt-2">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Prep Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="PrepTimeStr" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.PrepTimeStr" Change="@((arg) => ChangeTime(arg, "PrepTimeStr"))" />
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Cook Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="CookTimeStr" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.CookTimeStr" Change="@((arg) => ChangeTime(arg, "CookTimeStr"))" />
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Inactive Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="InactiveTimeStr" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.InactiveTimeStr" Change="@((arg) => ChangeTime(arg, "InactiveTimeStr"))" />
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Total Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="TotalTimeStr" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.TotalTimeStr" Change="@((arg) => ChangeTime(arg, "TotalTimeStr"))" />
              </div>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-6">
          <RadzenFieldset Text="Ingredients">
            @if (!ShowViewData)
            {
              <div class="row align-items-center">
                <div class="col-auto align-items-center d-flex">
                  <RadzenLabel Text="Ingredient" />
                </div>
                <div class="col-md-6">
                  <RadzenTextBox Name="Ingredient" @bind-Value="NewIngredient" />
                  <button type="button" class="btn btn-secondary btn-sm" @onclick="AddIngredient">Add</button>
                </div>
              </div>
            }
            <div class="row align-items-center mt-3">
              <ul>
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@Model.Ingredients.ToList()" TItem="Models.IngredientModel">
                  <Template Context="ingredient">
                    <li>
                      <RadzenTextBox class="form-group" style="width: 100%;" Name="IngredientTitle" @bind-Value="@ingredient.Title" />
                    </li>
                  </Template>
                </RadzenDataList>
              </ul>
            </div>
          </RadzenFieldset>
        </div>
        <div class="col-md-6">
          <RadzenFieldset Text="Steps">
            @if (!ShowViewData)
            {
              <div class="row align-items-center">
                <div class="col-md-1 align-items-center d-flex">
                  <RadzenLabel Text="Step" />
                </div>
                <div class="col-md-6">
                  <RadzenTextBox Name="Step" @bind-Value="NewStep" />
                  <button type="button" class="btn btn-secondary btn-sm" @onclick="AddStep">Add</button>
                </div>
              </div>
            }
            <div class="row align-items-center mt-3">
              <ol>
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@Model.Steps.ToList()" TItem="Models.StepModel">
                  <Template Context="step">
                    <li>
                      <RadzenTextBox class="form-group" style="width: 100%;" Name="StepTitle" @bind-Value="@step.Title" />
                    </li>
                  </Template>
                </RadzenDataList>
              </ol>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12 d-flex align-items-end justify-content-between" style="margin-top: 16px;">

          @if (!ShowViewData)
          {
            @if (Model.RecipeID > 0)
            {
              <button type="submit" class="btn btn-primary mt-2 mb-2">Update</button>
              <button type="button" class="btn btn-secondary mr-3 mt-2 mb-2" @onclick="CancelEditData">Cancel</button>
              <button type="button" class="btn btn-danger mr-3 mt-2 mb-2 offset-3" @onclick="ConfirmDelete">Delete</button>
            }
            else
            {
              <button type="submit" class="btn btn-primary mt-2 mb-2">Add</button>
              <button type="button" class="btn btn-secondary mr-3 mt-2 mb-2 offset-4" @onclick="CancelEditData">Cancel</button>
            }
          }
          else
          {
            <button type="button" class="btn btn-secondary mr-3 mt-2 mb-2 offset-4" @onclick="CancelEditData">Go Back</button>
          }
        </div>
      </div>
    </EditForm>
  }

  @if (!ShowEditData && !ShowViewData)
  {
    <div class="row justify-content-start">
      <div class="col-auto">
        <button type="button" class="btn btn-outline-primary btn-md" @onclick="AddData">Add Recipe</button>
      </div>
    </div>
    <hr />
    <div class="row justify-content-start mt-1">
      <div class="col-12">
        <h3>List</h3>
        <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="4"
                    AllowSorting="true" Data="@Recipes" TItem="IModel">
          <Columns>
            <RadzenGridColumn Filterable="false" Sortable="false" TItem="IModel" Width="50px" Property="RecipeID" Title="Id">
            </RadzenGridColumn>
            <RadzenGridColumn TItem="IModel" Property="Title" Title="Title" />
            <RadzenGridColumn TItem="IModel" Property="Description" Width="200px" Title="Description" />
            <RadzenGridColumn TItem="IModel" Property="Author" Title="Author" />
            <RadzenGridColumn TItem="IModel" Filterable="false" Sortable="false" Width="150px">
              <Template Context="data">
                <button type="button" class="btn btn-outline-secondary btn-sm" @onclick="(e) => ViewData(e, data)">View</button>
                <a type="button" class="btn btn-outline-secondary btn-sm" href=@($"/recipeprint/{data.RecipeID}")>Print</a>
              </Template>
            </RadzenGridColumn>
          </Columns>
        </RadzenGrid>
      </div>
    </div>
  }
</div>
@code {
  async Task ConfirmDelete() => await DialogService.OpenAsync("Are you sure?", ds =>
  @<div>
    <p Style="margin-bottom: 1rem">Are you sure you want to delete?</p>
    <div class="row">
      <div class="col-md-12">
        <RadzenButton Text="Yes" Click="() => ds.Close(true)" ButtonStyle="ButtonStyle.Danger" Style="margin-bottom: 10px; width: 150px" />
        <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
      </div>
    </div>
  </div>);
}