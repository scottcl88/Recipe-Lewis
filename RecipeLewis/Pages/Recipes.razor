@page "/recipes"

@using RecipeLewis.Data
@inherits RecipesBase

@using IModel = Models.RecipeModel

<div id="recipePage">
  <div class="row justify-content-center">
    <div class="col-auto">
      @if (ShowEditData)
      {
        @if (Model.RecipeID > 0)
        {
          <h2>Edit Recipe</h2>
        }
        else
        {
          <h2>Add Recipe</h2>
        }
      }
      else
      {
        <h1>Recipes</h1>
      }
    </div>
  </div>
  @if (ShowEditData || ShowViewData)
  {
    <EditForm Model="Model" OnValidSubmit="HandleValidSubmit">
      <div class="row">
        <div class="col-md-12">
          <RadzenFieldset Text="Recipe Info">
            <div class="row align-items-center">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Title" />
              </div>
              <div class="col-md-4">
                <RadzenTextBox Name="Title" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Title" />
              </div>
              <div class="col-md-1 col-offset-2 d-flex">
                <RadzenLabel Text="Author" />
              </div>
              <div class="col-md-4">
                <RadzenTextBox Name="Author" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Author" />
              </div>
            </div>
            <div class="row mt-2 align-items-center">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Description" />
              </div>
              <div class="col-md-9">
                <RadzenTextArea Name="Description" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.Description" />
              </div>
            </div>
            <div class="row mt-2 align-items-center">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Tags" />
              </div>
              <div class="col-md-9">
                <div id="tags" class="@(ShowViewData ? "readonly" : "")">
                  @foreach (var tag in Model.Tags)
                  {
                    <span class="tag" @onclick="(args => RemoveTag(tag.TagID, tag.TempID))">@tag.Title</span>
                  }
                  @if (!ShowViewData)
                  {
                    <RadzenTextBox id="tagInput" Change="@((arg) => AddTag())" Name="TagInput" Placeholder="Add a tag" type="text" @bind-Value="NewTag" @bind-disabled="ShowViewData" />
                  }
                  <input id="hiddenTagInput" @bind-value="AvailableTags" hidden />
                </div>
              </div>
            </div>
            @if (!ShowViewData)
            {
              <div class="row mt-3 align-items-center">
                <div class="col-auto offset-1">
                  <button type="button" id="selectFileButton" class="btn btn-sm btn-secondary">Add Picture</button>
                  <InputFile id="files" style="display: none;" OnChange="@OnInputFileChange" multiple accept=".gif,.jpg,.jpeg,.png,.tif,.tiff" />
                </div>
              </div>
              <div class="row">
                <div class="align-content-start col-md-12 d-flex offset-1" style="margin-top: 16px;">
                  @if (IsUploading)
                  {
                    <p class="mr-3" style="color: #6c757d;">Uploading...</p>
                    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 30%; opacity: .3;" />
                  }
                </div>
              </div>
            }
            <div class="row mt-2">
              <div class="col-auto">
                <div class="images" style="display:inline-flex;">
                  @foreach (var document in Model.Documents)
                  {
                    <div style="position:relative;">
                      <img class="mr-2" src="@document.ImageSource" alt="@document.Filename" width="200" height="150">
                      @if (!ShowViewData)
                      {
                        <span class="close-image" @onclick="(args => ConfirmDeleteDocument(document.DocumentID, document.TempID))"></span>
                      }
                    </div>
                  }
                </div>
              </div>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <RadzenFieldset Text="Details">
            <div class="row">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Serving Size" />
              </div>
              <div class="col-md-3">
                <RadzenTextBox Name="ServingSize" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.ServingSize" />
              </div>
              <div class="col-md-2 col-offset-2 d-flex">
                <RadzenLabel Text="Number of Servings" />
              </div>
              <div class="col-md-3">
                <RadzenTextBox Name="NumberOfServings" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.NumberOfServings" />
              </div>
            </div>
            <div class="row align-items-center mt-2">
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Prep Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="PrepTime" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.PrepTime"/>
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Cook Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="CookTime" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.CookTime"/>
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Inactive Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="InactiveTime" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.InactiveTime" />
              </div>
              <div class="col-md-1 d-flex">
                <RadzenLabel Text="Total Time" />
              </div>
              <div class="col-md-2">
                <RadzenTextBox Name="TotalTime" Placeholder="1 hour and 30 min" Style="width: 100%;" @bind-disabled="ShowViewData" @bind-Value="Model.TotalTime" />
              </div>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="col-md-6">
          <RadzenFieldset Text="Ingredients">
            @if (!ShowViewData)
            {
              <div class="row align-items-center">
                <div class="col-auto align-items-center d-flex">
                  <RadzenLabel Text="Ingredient" />
                </div>
                <div class="col-md-6">
                  <RadzenTextBox class="col-md-10" Name="Ingredient" id="ingredientInput" @bind-Value="NewIngredient" />
                  <button type="button" class="btn btn-secondary btn-sm" id="ingredientAdd" @onclick="AddIngredient">Add</button>
                </div>
              </div>
            }
            <div class="row align-items-center mt-3">
              <ul style="width: 75%">
                <RadzenDataList PageSize="15" class="datalist-block" WrapItems="true" AllowPaging="true" Data="@Model.Ingredients.ToList()" TItem="Models.IngredientModel">
                  <Template Context="ingredient">
                    <li>
                      <RadzenTextBox class="form-group" style="width: 100%;" Name="IngredientTitle" @bind-disabled="ShowViewData" @bind-Value="@ingredient.Title" />
                    </li>
                  </Template>
                </RadzenDataList>
              </ul>
            </div>
          </RadzenFieldset>
        </div>
        <div class="col-md-6">
          <RadzenFieldset Text="Steps">
            @if (!ShowViewData)
            {
              <div class="row align-items-center">
                <div class="col-md-1 align-items-center d-flex">
                  <RadzenLabel Text="Step" />
                </div>
                <div class="col-md-6">
                  <RadzenTextBox class="col-md-10" Name="Step" id="stepInput" @bind-Value="NewStep" />
                  <button type="button" class="btn btn-secondary btn-sm" id="stepAdd" @onclick="AddStep">Add</button>
                </div>
              </div>
            }
            <div class="row align-items-center mt-3">
              <ol style="width: 75%">
                <RadzenDataList PageSize="15" class="datalist-block" WrapItems="true" AllowPaging="true" Data="@Model.Steps.ToList()" TItem="Models.StepModel">
                  <Template Context="step">
                    <li>
                      <RadzenTextBox class="form-group" style="width: 100%;" Name="StepTitle" @bind-disabled="ShowViewData" @bind-Value="@step.Title" />
                    </li>
                  </Template>
                </RadzenDataList>
              </ol>
            </div>
          </RadzenFieldset>
        </div>
      </div>
      <div class="row">
        <div class="align-content-center col-md-12 d-flex justify-content-center" style="margin-top: 16px;">
          @if (!ShowViewData)
          {
            @if (Model.RecipeID > 0)
            {
              <button type="submit" class="btn btn-primary" disabled="@IsSaving">Update</button>
              <button type="button" class="btn btn-secondary offset-1" disabled="@IsSaving" @onclick="ConfirmCancel">Cancel</button>
              <button type="button" class="btn btn-danger offset-1" disabled="@IsSaving" @onclick="ConfirmDeleteRecipe">Delete</button>
            }
            else
            {
              <button type="submit" class="btn btn-primary" disabled="@IsSaving">Add</button>
              <button type="button" class="btn btn-secondary offset-1" disabled="@IsSaving" @onclick="ConfirmCancel">Cancel</button>
            }
          }
          else
          {
            <button type="button" class="btn btn-secondary" @onclick="CancelEditData">Go Back</button>
          }
        </div>
      </div>
      <div class="row">
        <div class="align-content-center col-md-12 d-flex justify-content-center" style="margin-top: 16px;">
          @if (IsSaving)
          {
            <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 30%; opacity: .3;" />
          }
        </div>
      </div>
    </EditForm>
  }

  @if (!ShowEditData && !ShowViewData)
  {
    <AuthorizeView Roles="Moderator">
      <Authorized>
        <div class="row justify-content-start">
          <div class="col-auto">
            <button type="button" class="btn btn-outline-primary btn-md" @onclick="AddData" disabled="@IsLoading">Add Recipe</button>
          </div>
        </div>
        <hr />
      </Authorized>
    </AuthorizeView>
    <div class="row justify-content-start mt-1">
      <div class="col-12">
        @if (IsLoading)
        {
          <br />
          <br />
          <p>Loading...</p>
          <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" Style="width: 50%;" />
        }
        else
        {
          <RadzenTextBox Placeholder="Search..." @oninput=@(args => Search(args)) @bind-value="SearchText" Style="width:100%;" class="mb-2" />
          <RadzenGrid AllowPaging="true" PageSize="10" Data="@Recipes" TItem="IModel" EmptyText="No recipes found">
            <Columns>
              <RadzenGridColumn TItem="IModel" Width="50px" Property="RecipeID" Title="Id">
              </RadzenGridColumn>
              <RadzenGridColumn TItem="IModel" Property="Title" Title="Title" />
              <RadzenGridColumn TItem="IModel" Property="Author" Title="Author" />
              <RadzenGridColumn TItem="IModel" Property="Description" Title="Description" />
              <RadzenGridColumn TItem="IModel" Width="225px" Title="Tags">
                <Template Context="data">
                  <div id="tags" class="readonly">
                    @foreach (var tag in data.Tags)
                    {
                      <span class="tag">@tag.Title</span>
                    }
                  </div>
                </Template>
              </RadzenGridColumn>
              <RadzenGridColumn TItem="IModel" Width="175px">
                <Template Context="data">
                  <AuthorizeView Roles="Moderator">
                    <Authorized>
                      <button type="button" class="btn btn-outline-secondary btn-sm" @onclick="(e) => EditData(e, data)">Edit</button>
                    </Authorized>
                  </AuthorizeView>
                  <button type="button" class="btn btn-outline-secondary btn-sm" @onclick="(e) => ViewData(e, data)">View</button>
                  <a type="button" class="btn btn-outline-secondary btn-sm" href=@($"/recipeprint/{data.RecipeID}")>Print</a>
                </Template>
              </RadzenGridColumn>
            </Columns>
          </RadzenGrid>
        }
      </div>
    </div>
  }
</div>
@code {
  async Task ConfirmDeleteRecipe() => await DialogService.OpenAsync("Are you sure?", ds =>
  @<div>
    <p Style="margin-bottom: 1rem">Are you sure you want to delete this recipe?</p>
    <div class="row">
      <div class="col-md-12">
        <RadzenButton Text="Yes" Click="() => DeleteRecipe(ds)" ButtonStyle="ButtonStyle.Danger" Style="margin-bottom: 10px; width: 150px" />
        <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
      </div>
    </div>
  </div>
  );
  async Task ConfirmDeleteDocument(int documentId, int tempId) => await DialogService.OpenAsync("Are you sure?", ds =>
  @<div>
    <p Style="margin-bottom: 1rem">Are you sure you want to delete this document?</p>
    <div class="row">
      <div class="col-md-12">
        <RadzenButton Text="Yes" Click="() => RemoveDocument(documentId, tempId, ds)" ButtonStyle="ButtonStyle.Danger" Style="margin-bottom: 10px; width: 150px" />
        <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
      </div>
    </div>
  </div>
  );
  async Task ConfirmCancel() => await DialogService.OpenAsync("Are you sure?", ds =>
  @<div>
    <p Style="margin-bottom: 1rem">Are you sure you want to cancel and lose your changes?</p>
    <div class="row">
      <div class="col-md-12">
        <RadzenButton Text="Yes" Click="() => CancelEditData(ds)" ButtonStyle="ButtonStyle.Danger" Style="margin-bottom: 10px; width: 150px" />
        <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px" />
      </div>
    </div>
  </div>
  );
}